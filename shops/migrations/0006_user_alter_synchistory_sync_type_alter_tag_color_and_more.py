# Generated by Django 5.2.6 on 2025-09-09 08:22

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('shops', '0005_alter_productvariation_is_composite'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pancake_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('fb_id', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'Người dùng',
                'verbose_name_plural': 'Người dùng',
                'db_table': 'users',
            },
        ),
        migrations.AlterField(
            model_name='synchistory',
            name='sync_type',
            field=models.CharField(choices=[('shops', 'Shops'), ('pages', 'Pages'), ('tags', 'Tags'), ('categories', 'Categories'), ('products', 'Products'), ('variations', 'Product Variations'), ('customers', 'Customers'), ('users', 'Users'), ('orders', 'Orders')], max_length=20),
        ),
        migrations.AlterField(
            model_name='tag',
            name='color',
            field=models.CharField(max_length=32),
        ),
        migrations.AlterField(
            model_name='tag',
            name='lighten_color',
            field=models.CharField(max_length=32),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pancake_id', models.CharField(max_length=100)),
                ('customer_id', models.CharField(max_length=100)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Nam'), ('female', 'Nữ'), ('other', 'Khác')], max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone_numbers', models.JSONField(blank=True, default=list)),
                ('emails', models.JSONField(blank=True, default=list)),
                ('fb_id', models.CharField(blank=True, max_length=255, null=True)),
                ('current_debts', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('purchased_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_amount_referred', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('reward_point', models.IntegerField(default=0)),
                ('used_reward_point', models.IntegerField(blank=True, null=True)),
                ('order_count', models.IntegerField(default=0)),
                ('succeed_order_count', models.IntegerField(default=0)),
                ('returned_order_count', models.IntegerField(default=0)),
                ('last_order_at', models.DateTimeField(blank=True, null=True)),
                ('referral_code', models.CharField(blank=True, max_length=50, null=True)),
                ('count_referrals', models.IntegerField(default=0)),
                ('is_block', models.BooleanField(default=False)),
                ('is_discount_by_level', models.BooleanField(blank=True, default=True, null=True)),
                ('is_adjust_debts', models.BooleanField(blank=True, null=True)),
                ('active_levera_pay', models.BooleanField(default=False)),
                ('level', models.CharField(blank=True, max_length=100, null=True)),
                ('currency', models.CharField(blank=True, max_length=10, null=True)),
                ('user_block_id', models.CharField(blank=True, max_length=100, null=True)),
                ('conversation_tags', models.JSONField(blank=True, null=True)),
                ('order_sources', models.JSONField(blank=True, default=list, null=True)),
                ('tags', models.JSONField(blank=True, default=list, null=True)),
                ('list_voucher', models.JSONField(blank=True, default=list, null=True)),
                ('notes', models.JSONField(blank=True, default=list, null=True)),
                ('inserted_at', models.DateTimeField()),
                ('updated_at_api', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(default=django.utils.timezone.now)),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='shops.shop')),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_customers', to='shops.user')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_customers', to='shops.user')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pancake_id', models.CharField(max_length=100, unique=True)),
                ('system_id', models.IntegerField(unique=True)),
                ('status', models.IntegerField(choices=[(0, 'Nháp'), (1, 'Đã gửi'), (2, 'Đã xác nhận'), (3, 'Đã giao'), (4, 'Đã hủy'), (5, 'Đã trả hàng'), (6, 'Đã hoàn tiền'), (7, 'Đã thanh toán'), (11, 'Đang chờ'), (15, 'Đang giao'), (16, 'Giao thất bại'), (18, 'Giao một phần'), (19, 'Thất lạc')], default=0)),
                ('sub_status', models.CharField(blank=True, max_length=50, null=True)),
                ('order_sources', models.CharField(blank=True, choices=[(-1, 'Facebook'), (23532, 'Telesale'), (1228024055, 'Tự ship'), (0, 'Hệ thống')], max_length=50, null=True)),
                ('order_sources_name', models.CharField(choices=[('Facebook', 'Facebook'), ('TELESALE', 'Telesale'), ('TỰ SHIP', 'Tự ship'), ('Hệ thống', 'Hệ thống')], max_length=50)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_price_after_sub_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('shipping_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('partner_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('tax', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('cod', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('prepaid', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('transfer_money', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('money_to_collect', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('charged_by_card', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('charged_by_momo', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('charged_by_qrpay', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('cash', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('exchange_payment', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('exchange_value', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('surcharge', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('levera_point', models.IntegerField(default=0)),
                ('bank_payments', models.JSONField(blank=True, default=dict, null=True)),
                ('prepaid_by_point', models.JSONField(blank=True, default=dict, null=True)),
                ('advanced_platform_fee', models.JSONField(blank=True, default=dict, null=True)),
                ('bill_full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bill_phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bill_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('is_free_shipping', models.BooleanField(blank=True, default=False, null=True)),
                ('is_livestream', models.BooleanField(blank=True, default=False, null=True)),
                ('is_live_shopping', models.BooleanField(blank=True, default=False, null=True)),
                ('is_exchange_order', models.BooleanField(blank=True, default=False, null=True)),
                ('is_smc', models.BooleanField(blank=True, default=False, null=True)),
                ('customer_pay_fee', models.BooleanField(blank=True, default=False, null=True)),
                ('received_at_shop', models.BooleanField(blank=True, default=False, null=True)),
                ('return_fee', models.BooleanField(blank=True, default=False, null=True)),
                ('warehouse_id', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('note_print', models.TextField(blank=True, null=True)),
                ('note_image', models.URLField(blank=True, null=True)),
                ('link', models.URLField(blank=True, null=True)),
                ('link_confirm_order', models.URLField(blank=True, null=True)),
                ('order_link', models.URLField(blank=True, null=True)),
                ('account', models.CharField(blank=True, max_length=100, null=True)),
                ('account_name', models.CharField(blank=True, max_length=255, null=True)),
                ('page_external_id', models.CharField(blank=True, max_length=100, null=True)),
                ('conversation_id', models.CharField(blank=True, max_length=255, null=True)),
                ('post_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ad_id', models.CharField(blank=True, max_length=255, null=True)),
                ('ads_source', models.CharField(blank=True, max_length=100, null=True)),
                ('p_utm_source', models.CharField(blank=True, max_length=255, null=True)),
                ('p_utm_medium', models.CharField(blank=True, max_length=255, null=True)),
                ('p_utm_campaign', models.CharField(blank=True, max_length=255, null=True)),
                ('p_utm_content', models.CharField(blank=True, max_length=255, null=True)),
                ('p_utm_term', models.CharField(blank=True, max_length=255, null=True)),
                ('p_utm_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_referral_code', models.CharField(blank=True, max_length=50, null=True)),
                ('pke_mkter', models.CharField(blank=True, max_length=100, null=True)),
                ('marketplace_id', models.CharField(blank=True, max_length=100, null=True)),
                ('fee_marketplace', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('customer_needs', models.JSONField(blank=True, default=list)),
                ('activated_combo_products', models.JSONField(blank=True, default=list)),
                ('activated_promotion_advances', models.JSONField(blank=True, default=list)),
                ('payment_purchase_histories', models.JSONField(blank=True, default=list)),
                ('total_quantity', models.IntegerField(default=0)),
                ('items_length', models.IntegerField(default=0)),
                ('returned_reason', models.TextField(blank=True, null=True)),
                ('returned_reason_name', models.CharField(blank=True, max_length=255, null=True)),
                ('time_assign_seller', models.DateTimeField(blank=True, null=True)),
                ('time_assign_care', models.DateTimeField(blank=True, null=True)),
                ('time_send_partner', models.DateTimeField(blank=True, null=True)),
                ('estimate_delivery_date', models.DateTimeField(blank=True, null=True)),
                ('buyer_total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('inserted_at', models.DateTimeField()),
                ('updated_at_api', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(default=django.utils.timezone.now)),
                ('order_currency', models.CharField(default='VND', max_length=10)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='shops.customer')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='shops.page')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='shops.shop')),
                ('assigning_care', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_care_orders', to='shops.user')),
                ('assigning_seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_seller_orders', to='shops.user')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_orders', to='shops.user')),
                ('last_editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='edited_orders', to='shops.user')),
                ('marketer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='marketer_orders', to='shops.user')),
            ],
            options={
                'verbose_name': 'Đơn hàng',
                'verbose_name_plural': 'Đơn hàng',
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='OrderPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_id', models.IntegerField()),
                ('partner_name', models.CharField(blank=True, max_length=100, null=True)),
                ('partner_status', models.CharField(blank=True, max_length=50, null=True)),
                ('extend_code', models.CharField(blank=True, max_length=100, null=True)),
                ('order_number_vtp', models.CharField(blank=True, max_length=100, null=True)),
                ('sort_code', models.CharField(blank=True, max_length=100, null=True)),
                ('custom_partner_id', models.CharField(blank=True, max_length=100, null=True)),
                ('cod', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('delivery_name', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_tel', models.CharField(blank=True, max_length=20, null=True)),
                ('count_of_delivery', models.IntegerField(blank=True, null=True)),
                ('system_created', models.BooleanField(blank=True, default=True, null=True)),
                ('is_returned', models.BooleanField(blank=True, null=True)),
                ('is_ghn_v2', models.BooleanField(blank=True, null=True)),
                ('printed_form', models.URLField(blank=True, null=True)),
                ('order_id_ghn', models.CharField(blank=True, max_length=100, null=True)),
                ('first_delivery_at', models.DateTimeField(blank=True, null=True)),
                ('picked_up_at', models.DateTimeField(blank=True, null=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at_partner', models.DateTimeField(blank=True, null=True)),
                ('service_partner', models.JSONField(blank=True, default=dict, null=True)),
                ('extend_update', models.JSONField(blank=True, default=list)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='partner', to='shops.order')),
            ],
            options={
                'verbose_name': 'Đối tác vận chuyển',
                'verbose_name_plural': 'Đối tác vận chuyển',
                'db_table': 'order_partners',
            },
        ),
        migrations.CreateModel(
            name='OrderShippingAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('full_address', models.TextField(blank=True, null=True)),
                ('country_code', models.CharField(blank=True, default='84', max_length=10, null=True)),
                ('province_id', models.CharField(blank=True, max_length=10, null=True)),
                ('province_name', models.CharField(blank=True, max_length=100, null=True)),
                ('district_id', models.CharField(blank=True, max_length=10, null=True)),
                ('district_name', models.CharField(blank=True, max_length=100, null=True)),
                ('commune_id', models.CharField(blank=True, max_length=10, null=True)),
                ('commune_name', models.CharField(blank=True, max_length=100, null=True)),
                ('commnue_name', models.CharField(blank=True, max_length=100, null=True)),
                ('new_province_id', models.CharField(blank=True, max_length=20, null=True)),
                ('new_commune_id', models.CharField(blank=True, max_length=20, null=True)),
                ('new_full_address', models.TextField(blank=True, null=True)),
                ('post_code', models.CharField(blank=True, max_length=10, null=True)),
                ('marketplace_address', models.TextField(blank=True, null=True)),
                ('render_type', models.CharField(blank=True, default='old', max_length=20, null=True)),
                ('commune_code_sicepat', models.CharField(blank=True, max_length=20, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_address', to='shops.order')),
            ],
            options={
                'verbose_name': 'Địa chỉ giao hàng',
                'verbose_name_plural': 'Địa chỉ giao hàng',
                'db_table': 'order_shipping_addresses',
            },
        ),
        migrations.CreateModel(
            name='OrderWarehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField(blank=True, null=True)),
                ('full_address', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('province_id', models.CharField(blank=True, max_length=10, null=True)),
                ('district_id', models.CharField(blank=True, max_length=10, null=True)),
                ('commune_id', models.CharField(blank=True, max_length=10, null=True)),
                ('postcode', models.CharField(blank=True, max_length=10, null=True)),
                ('settings', models.JSONField(blank=True, null=True)),
                ('has_snappy_service', models.BooleanField(default=False)),
                ('custom_id', models.CharField(blank=True, max_length=100, null=True)),
                ('affiliate_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ffm_id', models.CharField(blank=True, max_length=100, null=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='warehouse', to='shops.order')),
            ],
            options={
                'verbose_name': 'Kho hàng đơn hàng',
                'verbose_name_plural': 'Kho hàng đơn hàng',
                'db_table': 'order_warehouses',
            },
        ),
        migrations.CreateModel(
            name='OrderStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor_fb', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('old_status', models.IntegerField(blank=True, null=True)),
                ('status', models.IntegerField()),
                ('updated_at', models.DateTimeField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='shops.order')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shops.user')),
            ],
            options={
                'verbose_name': 'Lịch sử trạng thái đơn hàng',
                'verbose_name_plural': 'Lịch sử trạng thái đơn hàng',
                'db_table': 'order_status_histories',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changes', models.JSONField(default=dict)),
                ('updated_at', models.DateTimeField()),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='shops.order')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shops.user')),
            ],
            options={
                'verbose_name': 'Lịch sử đơn hàng',
                'verbose_name_plural': 'Lịch sử đơn hàng',
                'db_table': 'order_histories',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pancake_id', models.CharField(max_length=100)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('full_address', models.TextField(blank=True, null=True)),
                ('post_code', models.CharField(blank=True, max_length=10, null=True)),
                ('country_code', models.IntegerField(blank=True, default=84, null=True)),
                ('province_id', models.CharField(blank=True, max_length=10, null=True)),
                ('district_id', models.CharField(blank=True, max_length=10, null=True)),
                ('commune_id', models.CharField(blank=True, max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_sync', models.DateTimeField(default=django.utils.timezone.now)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='shops.customer')),
            ],
            options={
                'verbose_name': 'Địa chỉ khách hàng',
                'verbose_name_plural': 'Địa chỉ khách hàng',
                'db_table': 'customer_addresses',
                'unique_together': {('customer', 'pancake_id')},
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.BigIntegerField()),
                ('quantity', models.IntegerField(default=1)),
                ('added_to_cart_quantity', models.IntegerField(default=0)),
                ('retail_price', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('discount_each_product', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('same_price_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('is_bonus_product', models.BooleanField(default=False)),
                ('is_composite', models.BooleanField(blank=True, null=True)),
                ('is_discount_percent', models.BooleanField(default=False)),
                ('is_wholesale', models.BooleanField(default=False)),
                ('one_time_product', models.BooleanField(default=False)),
                ('return_quantity', models.IntegerField(default=0)),
                ('returned_count', models.IntegerField(default=0)),
                ('returning_quantity', models.IntegerField(default=0)),
                ('exchange_count', models.IntegerField(default=0)),
                ('composite_item_id', models.CharField(blank=True, max_length=100, null=True)),
                ('measure_group_id', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('note_product', models.TextField(blank=True, null=True)),
                ('components', models.JSONField(blank=True, null=True)),
                ('variation_info', models.JSONField(blank=True, default=dict)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shops.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shops.product')),
                ('variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shops.productvariation')),
            ],
            options={
                'verbose_name': 'Sản phẩm đơn hàng',
                'verbose_name_plural': 'Sản phẩm đơn hàng',
                'db_table': 'order_items',
                'unique_together': {('order', 'item_id')},
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['shop', 'status'], name='orders_shop_id_30d977_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['customer'], name='orders_custome_6c3a7f_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['system_id'], name='orders_system__bbed4d_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_sources'], name='orders_order_s_e6e863_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['inserted_at'], name='orders_inserte_150cbc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='order',
            unique_together={('shop', 'pancake_id')},
        ),
    ]
